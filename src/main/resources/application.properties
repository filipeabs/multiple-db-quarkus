
quarkus.log.level=INFO
quarkus.log.console.format=%d{yyyy-MM-dd HH:mm:ss} %-5p [%c{2.}] (%t) %X{requestID} %s%e%n

# Configure JDBC datasources
# First datasource
quarkus.datasource.first.db-kind=h2
quarkus.datasource.first.username=sa
quarkus.datasource.first.password=sa
quarkus.datasource.first.jdbc.url=jdbc:h2:mem:MYDB;INIT=RUNSCRIPT FROM 'classpath:import.sql'

# Second (mirror) datasource
quarkus.datasource.second.db-kind=h2
quarkus.datasource.second.username=sa
quarkus.datasource.second.password=sa
quarkus.datasource.second.jdbc.url=jdbc:h2:file:./src/main/resources/db/MYDB;INIT=RUNSCRIPT FROM 'classpath:import.sql'

# The Hibernate ORM extension supports defining persistence units by using these configuration properties. 
# For each persistence unit, point to the datasource of your choice.
quarkus.hibernate-orm."first".datasource=first
quarkus.hibernate-orm."first".database.generation=none
quarkus.hibernate-orm."first".packages=dev.filipeabs.models

quarkus.hibernate-orm."second".datasource=second
quarkus.hibernate-orm."second".database.generation=none
quarkus.hibernate-orm."second".packages=dev.filipeabs.models

quarkus.hibernate-orm.log.sql=true


# SmallRye OpenAPI documentation:
quarkus.smallrye-openapi.info-title=${quarkus.application.name:"emptyInfo"}
%dev.quarkus.smallrye-openapi.info-title=${quarkus.application.name:"emptyInfo"} (development)
%test.quarkus.smallrye-openapi.info-title=${quarkus.application.name:"emptyInfo"} (test)
quarkus.smallrye-openapi.info-version=${quarkus.application.version:0.0.0}
quarkus.smallrye-openapi.info-description=A good way to train and explain the use of more than one data source in Quarkus

# Swagger
# By default, Swagger UI is only available when Quarkus is started in dev or test mode.
# Making it available in production too:
quarkus.swagger-ui.always-include=true